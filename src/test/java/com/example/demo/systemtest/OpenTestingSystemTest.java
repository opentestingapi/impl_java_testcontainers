package com.example.demo.systemtest;

import lombok.SneakyThrows;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.MethodSource;
import org.springframework.boot.test.context.SpringBootTest;

import com.example.demo.systemtest.util.OpenTestingApiTester;

import java.io.File;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

import static org.junit.Assert.assertTrue;

@SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
class OpenTestingSystemTest extends OpenTestingApiTester {

	private static final String TESTFOLDER = "opentestingapi/";

	@BeforeAll
	private static void beforeAll() {
		// lets start opentesting
		init();
	}

	@ParameterizedTest
	@MethodSource("getTestCases")
	@SneakyThrows
	void test(String testcase) {
		assertTrue(testcase+": fail", testDefault( TESTFOLDER+testcase+"/"));
	}

	/**
	 * read all test cases
	 * @return Llist with folders
	 */
	static List<String> getTestCases() {
		List<String> tests = new ArrayList<>();
		ClassLoader classLoader = OpenTestingSystemTest.class.getClassLoader();
		File file = new File(classLoader.getResource(TESTFOLDER).getFile());
		for (File folder : file.listFiles()) {
			if (folder.isDirectory()) tests.add(folder.getName());
		}
		Collections.sort(tests);
		return tests;
	}

	/**
	 * use this one to execute a dedicated test
	 */
	//@Test
	@SneakyThrows
	void helloworldtest() {
		assertTrue("helloworldtest: fail", testDefault( TESTFOLDER+"helloworldtest/"));
	}

	/**
	 * use this one to keep test env running
	 * @throws InterruptedException
	 */
	//@Test
	void sleep() throws InterruptedException {		
		Thread.sleep(100000000);
	}

}